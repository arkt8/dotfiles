#!/usr/bin/tmux

# Superior than Screen.
# Corrects colors, italics and bolds
set -g default-terminal "tmux-256color"
set -g xterm-keys on

# Accept True Color (TC)
set -g terminal-overrides "*:Tc"
set -ga terminal-overrides ",xterm*:Tc"
set -ga terminal-overrides ",rxvt-unicode*:Tc"
set -ga terminal-overrides ",screen*:Tc"
set -ga terminal-overrides ",tmux*:Tc"

set -g monitor-activity on
set -g mouse on

# Start windows and panes index at 1, not 0.
set -g base-index 1
set -sg escape-time 0
setw -g pane-base-index 1

# Renumber when close a window
set-option -g renumber-windows on

# Enable focus events, which are needed to keep vim's focus events working when
# vim is running inside tmux.
set -g focus-events on

# Layout {{{
set -g status-style bg=colour0,fg=colour7
set -g status-left "#[bg=colour8,fg=colour15] #S #[default]"
set -g status-left-length 20
set -g status-right "#[bg=colour8,fg=colour15] M:#(/usr/bin/free -m | grep '^Mem' | awk '{print \$4}') #{window_panes}p #[default]"


#set-option -g window-status-separator ""

set -g window-status-style          fg=colour7,bg=colour0
set -g window-status-current-style  fg=colour0,bg=colour2
set -g window-status-bell-style     fg=colour3,bg=colour0,bold
set -g window-status-activity-style fg=colour3,bg=colour0
set -g window-status-format         "#[default] #I:#W#{?#{==:#{window_zoomed_flag},1},+, }"
set -g window-status-current-format "#[default] #I:#W#{?#{==:#{window_zoomed_flag},1},+, }"

set -g pane-border-status top
set -g pane-border-format "#{?#{==:#{pane_title},#h},(#{pane_current_command}),[#{pane_title}]}"
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour10,bg=default

#}}}


# set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"


# Keybindings {{{
bind S command-prompt -p '(source-session)' 'source-file "$HOME/.dotfiles/tmux/%%%"'
bind -n M-0 select-window -t :0
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-Left move-pane -t :+1

# ----- Vim Mode {{{
set -g mode-keys vi
bind-key Escape copy-mode         # enter copy mode default [
bind-key p      paste-buffer      # default ]
bind-key P      choose-buffer     # tmux clipboard history
bind-key +      delete-buffer \; display-message "Deleted tmux copy history"
bind-key -T copy-mode-vi v   send-keys -X rectangle-on \;\
                             send-keys -X begin-selection\;\
                             display "Select Mode: ( 'y' to Copy / Esc to Cancel )"
bind-key -T copy-mode-vi V   send-keys -X select-line;
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle;
bind-key -T choice-mode-vi h send-keys -X tree-collapse ;
bind-key -T choice-mode-vi l send-keys -X tree-expand ;
bind-key -T choice-mode-vi H send-keys -X tree-collapse-all ;
bind-key -T choice-mode-vi L send-keys -X tree-expand-all ;
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -in -selection clipboard";
bind-key -T copy-mode-vi y   send -X copy-pipe "xclip -in -selection clipboard"\; \
                             run "tmux set-buffer -- \"$(xsel -o -b)\""\;

bind-key -T copy-mode-vi p   run-shell "tmux set-buffer -- \"$(xsel -o -b)\""\; \
                             paste-buffer\; \
                             display-message "Copy to tmux"\;
bind-key -n M-v      run-shell "tmux set-buffer -- \"$(xsel -o -b)\"" \; display-message "Copy to tmux"
bind-key -n M-c      run-shell "tmux show-buffer | xsel -i -b" \;        display-message "Copy to system"
# ----- }}}


# complements actions from default prefix
# Example: C-b " -> split pane.    M-b " -> rename pane
#          C-b c -> create window  M-b c -> create session

bind-key -T root M-b  switch-client -T RMb
bind-key -T RMb '"'   set pane-border-status
bind-key -T RMb ","   command-prompt -p '(rename-pane) ' 'select-pane -T "%%%"'
bind-key -T RMb  c    new-session
# }}}

# vim: foldmethod=marker foldmarker={{{,}}} foldenable
